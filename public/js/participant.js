/**
 * A Participant
 * @typedef {Object} Participant
 * @property {string} _id - Participant's unique id generated by MongoDB
 * @property {string} name - Participant's name
 * @property {number} maxHealth - Participant's endurance
 * @property {number} health - Participant's current hp (for use in battles)
 * @property {number} speed - Participant's speed
 * @property {number} attack - Participant's attack
 * @property {number} dodge - Participant's dodge
 * @property {boolean} isDodging - Participant dodge action on or off
 * @property {string} type - Participant type (enemy/player)
 * @property {string} [subtype] - Enemy type (human/monster)
 * @property {number} [experience] - Participant's xp count, only for players
 * @property {Object} [inventory] - Participant's items, only for players and human enemies
 * @property {Object} skillsOwned - Participant's skills
 * @property {Object} spellsOwned - Participant's spells
 * @property {number} [level] - Participant's level, only for players
 * @property {number} armor - Participant's armor rating
 * @property {number} [zone] - Participant's zone, only for enemies
 * @property {array} statusesApplied - Array of statuses applied on the participant
 * @property {number} gold - Participant's money
 */
import {Settings} from "./settings.js";

class Participant {
    constructor(id) {
        this._id = id;
    }

    name = "";
    maxHealth = 0;
    health = 0;
    speed = 0;
    attack = 0;
    dodge = 0;
    isDodging = false;
    type = "";
    subtype = "";
    experience = "";
    inventory = {};
    skillsOwned = {};
    spellsOwned = {};
    level = 1;
    armor = 0;
    zone = 0;
    statusesApplied = [];
    gold = 0;

    //This property is set at the start of the local turn
    currentlyActingParticipant = {};
    static setCurrentlyActingParticipant() {
        this.currentlyActingParticipant = Settings.participants[Settings.localTurn];
    }
    static getCurrentlyActingParticipant() {
        return this.currentlyActingParticipant;
    }
}

export {Participant};